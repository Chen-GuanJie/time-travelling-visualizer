/* Copyright 2016 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
const FILL = '#dddddd';
const FILL_OPACITY = 0.2;
const STROKE = '#aaaaaa';
const STROKE_WIDTH = 2;
const STROKE_DASHARRAY = '10 5';
/**
 * A class that manages and renders a data selection rectangle.
 */
export class ScatterPlotRectangleSelector {
    /**
     * @param container The container HTML element that the selection SVG rect
     *     will be a child of.
     * @param selectionCallback The callback that accepts a bounding box to be
     *     called when selection changes. Currently, we only call the callback on
     *     mouseUp.
     */
    constructor(container, selectionCallback) {
        this.svgElement = container.querySelector('#selector');
        this.rectElement = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
        this.rectElement.style.stroke = STROKE;
        this.rectElement.style.strokeDasharray = STROKE_DASHARRAY;
        this.rectElement.style.strokeWidth = '' + STROKE_WIDTH;
        this.rectElement.style.fill = FILL;
        this.rectElement.style.fillOpacity = '' + FILL_OPACITY;
        this.svgElement.appendChild(this.rectElement);
        this.selectionCallback = selectionCallback;
        this.isMouseDown = false;
    }
    onMouseDown(offsetX, offsetY) {
        this.isMouseDown = true;
        this.svgElement.style.display = 'block';
        this.startCoordinates = [offsetX, offsetY];
        this.lastBoundingBox = {
            x: this.startCoordinates[0],
            y: this.startCoordinates[1],
            width: 1,
            height: 1,
        };
    }
    onMouseMove(offsetX, offsetY) {
        if (!this.isMouseDown) {
            return;
        }
        this.lastBoundingBox.x = Math.min(offsetX, this.startCoordinates[0]);
        this.lastBoundingBox.y = Math.max(offsetY, this.startCoordinates[1]);
        this.lastBoundingBox.width =
            Math.max(offsetX, this.startCoordinates[0]) - this.lastBoundingBox.x;
        this.lastBoundingBox.height =
            this.lastBoundingBox.y - Math.min(offsetY, this.startCoordinates[1]);
        this.rectElement.setAttribute('x', '' + this.lastBoundingBox.x);
        this.rectElement.setAttribute('y', '' + (this.lastBoundingBox.y - this.lastBoundingBox.height));
        this.rectElement.setAttribute('width', '' + this.lastBoundingBox.width);
        this.rectElement.setAttribute('height', '' + this.lastBoundingBox.height);
    }
    onMouseUp() {
        this.isMouseDown = false;
        this.svgElement.style.display = 'none';
        this.rectElement.setAttribute('width', '0');
        this.rectElement.setAttribute('height', '0');
        this.selectionCallback(this.lastBoundingBox);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhdHRlclBsb3RSZWN0YW5nbGVTZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RlbnNvcmJvYXJkL3Byb2plY3Rvci9zY2F0dGVyUGxvdFJlY3RhbmdsZVNlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O2dGQWFnRjtBQUVoRixNQUFNLElBQUksR0FBRyxTQUFTLENBQUM7QUFDdkIsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFDO0FBQ3pCLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQztBQUN6QixNQUFNLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDdkIsTUFBTSxnQkFBZ0IsR0FBRyxNQUFNLENBQUM7QUFTaEM7O0dBRUc7QUFDSCxNQUFNLE9BQU8sNEJBQTRCO0lBT3ZDOzs7Ozs7T0FNRztJQUNILFlBQ0UsU0FBc0IsRUFDdEIsaUJBQTREO1FBRTVELElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQWUsQ0FBQztRQUNyRSxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQ3pDLDRCQUE0QixFQUM1QixNQUFNLENBQ1AsQ0FBQztRQUNGLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDdkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLGdCQUFnQixDQUFDO1FBQzFELElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxFQUFFLEdBQUcsWUFBWSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLEVBQUUsR0FBRyxZQUFZLENBQUM7UUFDdkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxX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MjAxNiBUaGUgVGVuc29yRmxvdyBBdXRob3JzLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovXG5cbmNvbnN0IEZJTEwgPSAnI2RkZGRkZCc7XG5jb25zdCBGSUxMX09QQUNJVFkgPSAwLjI7XG5jb25zdCBTVFJPS0UgPSAnI2FhYWFhYSc7XG5jb25zdCBTVFJPS0VfV0lEVEggPSAyO1xuY29uc3QgU1RST0tFX0RBU0hBUlJBWSA9ICcxMCA1JztcbmV4cG9ydCBpbnRlcmZhY2UgU2NhdHRlckJvdW5kaW5nQm94IHtcbiAgLy8gVGhlIGJvdW5kaW5nIGJveCAoeCwgeSkgcG9zaXRpb24gcmVmZXJzIHRvIHRoZSBib3R0b20gbGVmdCBjb3JuZXIgb2YgdGhlXG4gIC8vIHJlY3QuXG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xuICB3aWR0aDogbnVtYmVyO1xuICBoZWlnaHQ6IG51bWJlcjtcbn1cbi8qKlxuICogQSBjbGFzcyB0aGF0IG1hbmFnZXMgYW5kIHJlbmRlcnMgYSBkYXRhIHNlbGVjdGlvbiByZWN0YW5nbGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBTY2F0dGVyUGxvdFJlY3RhbmdsZVNlbGVjdG9yIHtcbiAgcHJpdmF0ZSBzdmdFbGVtZW50OiBTVkdFbGVtZW50O1xuICBwcml2YXRlIHJlY3RFbGVtZW50OiBTVkdSZWN0RWxlbWVudDtcbiAgcHJpdmF0ZSBpc01vdXNlRG93bjogYm9vbGVhbjtcbiAgcHJpdmF0ZSBzdGFydENvb3JkaW5hdGVzOiBbbnVtYmVyLCBudW1iZXJdO1xuICBwcml2YXRlIGxhc3RCb3VuZGluZ0JveDogU2NhdHRlckJvdW5kaW5nQm94O1xuICBwcml2YXRlIHNlbGVjdGlvbkNhbGxiYWNrOiAoYm91bmRpbmdCb3g6IFNjYXR0ZXJCb3VuZGluZ0JveCkgPT4gdm9pZDtcbiAgLyoqXG4gICAqIEBwYXJhbSBjb250YWluZXIgVGhlIGNvbnRhaW5lciBIVE1MIGVsZW1lbnQgdGhhdCB0aGUgc2VsZWN0aW9uIFNWRyByZWN0XG4gICAqICAgICB3aWxsIGJlIGEgY2hpbGQgb2YuXG4gICAqIEBwYXJhbSBzZWxlY3Rpb25DYWxsYmFjayBUaGUgY2FsbGJhY2sgdGhhdCBhY2NlcHRzIGEgYm91bmRpbmcgYm94IHRvIGJlXG4gICAqICAgICBjYWxsZWQgd2hlbiBzZWxlY3Rpb24gY2hhbmdlcy4gQ3VycmVudGx5LCB3ZSBvbmx5IGNhbGwgdGhlIGNhbGxiYWNrIG9uXG4gICAqICAgICBtb3VzZVVwLlxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgY29udGFpbmVyOiBIVE1MRWxlbWVudCxcbiAgICBzZWxlY3Rpb25DYWxsYmFjazogKGJvdW5kaW5nQm94OiBTY2F0dGVyQm91bmRpbmdCb3gpID0+IHZvaWRcbiAgKSB7XG4gICAgdGhpcy5zdmdFbGVtZW50ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJyNzZWxlY3RvcicpIGFzIFNWR0VsZW1lbnQ7XG4gICAgdGhpcy5yZWN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcbiAgICAgICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsXG4gICAgICAncmVjdCdcbiAgICApO1xuICAgIHRoaXMucmVjdEVsZW1lbnQuc3R5bGUuc3Ryb2tlID0gU1RST0tFO1xuICAgIHRoaXMucmVjdEVsZW1lbnQuc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gU1RST0tFX0RBU0hBUlJBWTtcbiAgICB0aGlzLnJlY3RFbGVtZW50LnN0eWxlLnN0cm9rZVdpZHRoID0gJycgKyBTVFJPS0VfV0lEVEg7XG4gICAgdGhpcy5yZWN0RWxlbWVudC5zdHlsZS5maWxsID0gRklMTDtcbiAgICB0aGlzLnJlY3RFbGVtZW50LnN0eWxlLmZpbGxPcGFjaXR5ID0gJycgKyBGSUxMX09QQUNJVFk7XG4gICAgdGhpcy5zdmdFbGVtZW50LmFwcGVuZENoaWxkKHRoaXMucmVjdEVsZW1lbnQpO1xuICAgIHRoaXMuc2VsZWN0aW9uQ2FsbGJhY2sgPSBzZWxlY3Rpb25DYWxsYmFjaztcbiAgICB0aGlzLmlzTW91c2VEb3duID0gZmFsc2U7XG4gIH1cbiAgb25Nb3VzZURvd24ob2Zmc2V0WDogbnVtYmVyLCBvZmZzZXRZOiBudW1iZXIpIHtcbiAgICB0aGlzLmlzTW91c2VEb3duID0gdHJ1ZTtcbiAgICB0aGlzLnN2Z0VsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgdGhpcy5zdGFydENvb3JkaW5hdGVzID0gW29mZnNldFgsIG9mZnNldFldO1xuICAgIHRoaXMubGFzdEJvdW5kaW5nQm94ID0ge1xuICAgICAgeDogdGhpcy5zdGFydENvb3JkaW5hdGVzWzBdLFxuICAgICAgeTogdGhpcy5zdGFydENvb3JkaW5hdGVzWzFdLFxuICAgICAgd2lkdGg6IDEsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgfTtcbiAgfVxuICBvbk1vdXNlTW92ZShvZmZzZXRYOiBudW1iZXIsIG9mZnNldFk6IG51bWJlcikge1xuICAgIGlmICghdGhpcy5pc01vdXNlRG93bikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmxhc3RCb3VuZGluZ0JveC54ID0gTWF0aC5taW4ob2Zmc2V0WCwgdGhpcy5zdGFydENvb3JkaW5hdGVzWzBdKTtcbiAgICB0aGlzLmxhc3RCb3VuZGluZ0JveC55ID0gTWF0aC5tYXgob2Zmc2V0WSwgdGhpcy5zdGFydENvb3JkaW5hdGVzWzFdKTtcbiAgICB0aGlzLmxhc3RCb3VuZGluZ0JveC53aWR0aCA9XG4gICAgICBNYXRoLm1heChvZmZzZXRYLCB0aGlzLnN0YXJ0Q29vcmRpbmF0ZXNbMF0pIC0gdGhpcy5sYXN0Qm91bmRpbmdCb3gueDtcbiAgICB0aGlzLmxhc3RCb3VuZGluZ0JveC5oZWlnaHQgPVxuICAgICAgdGhpcy5sYXN0Qm91bmRpbmdCb3gueSAtIE1hdGgubWluKG9mZnNldFksIHRoaXMuc3RhcnRDb29yZGluYXRlc1sxXSk7XG4gICAgdGhpcy5yZWN0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3gnLCAnJyArIHRoaXMubGFzdEJvdW5kaW5nQm94LngpO1xuICAgIHRoaXMucmVjdEVsZW1lbnQuc2V0QXR0cmlidXRlKFxuICAgICAgJ3knLFxuICAgICAgJycgKyAodGhpcy5sYXN0Qm91bmRpbmdCb3gueSAtIHRoaXMubGFzdEJvdW5kaW5nQm94LmhlaWdodClcbiAgICApO1xuICAgIHRoaXMucmVjdEVsZW1lbnQuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcnICsgdGhpcy5sYXN0Qm91bmRpbmdCb3gud2lkdGgpO1xuICAgIHRoaXMucmVjdEVsZW1lbnQuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCAnJyArIHRoaXMubGFzdEJvdW5kaW5nQm94LmhlaWdodCk7XG4gIH1cbiAgb25Nb3VzZVVwKCkge1xuICAgIHRoaXMuaXNNb3VzZURvd24gPSBmYWxzZTtcbiAgICB0aGlzLnN2Z0VsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB0aGlzLnJlY3RFbGVtZW50LnNldEF0dHJpYnV0ZSgnd2lkdGgnLCAnMCcpO1xuICAgIHRoaXMucmVjdEVsZW1lbnQuc2V0QXR0cmlidXRlKCdoZWlnaHQnLCAnMCcpO1xuICAgIHRoaXMuc2VsZWN0aW9uQ2FsbGJhY2sodGhpcy5sYXN0Qm91bmRpbmdCb3gpO1xuICB9XG59XG4iXX0=